trigger: none
pool:
  name: Default
variables:
  terraformDirectory: '.'
  azureServiceConnection: 'prashanthscn'
stages:
  - stage: Terraform
    jobs:
      - job: TerraformJob
        displayName: 'Terraform Infrastructure Deployment'
        steps:
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform init -upgrade
          # - task: AzureCLI@2
          #   displayName: 'Terraform destroy'
          #   inputs:
          #     azureSubscription: $(azureServiceConnection)
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     workingDirectory: $(terraformDirectory)
          #     inlineScript: |
          #       terraform destroy -auto-approve

          - task: AzureCLI@2
            displayName: 'Terraform Validate'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform validate

          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform taint null_resource.install_ingress_aks2
                terraform plan -lock=false -out=tfplan
          # - task: AzureCLI@2
          #   displayName: 'Terraform Force Unlock'
          #   condition: always()  # Optional: Always runs, even if previous steps fail
          #   inputs:
          #     azureSubscription: $(azureServiceConnection)
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     workingDirectory: $(terraformDirectory)
          #     inlineScript: |
          #       echo "Force unlocking Terraform state..."
          #       terraform force-unlock -force 65c31f81-96d7-ad36-aa62-c60741d4aa5b
                
          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            continueOnError: true
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform apply -auto-approve -lock=false tfplan
         