trigger: none

pool:
  name: Default

variables:
  terraformDirectory: '.'         # Change this if your main.tf is in a subfolder
  azureServiceConnection: 'ARM'   # Replace with your actual service connection name

stages:
  - stage: Terraform
    displayName: 'Terraform Deployment Stage'
    jobs:
      - job: TerraformJob
        displayName: 'Run Terraform Commands'
        steps:
          # Step 1: Terraform Init
          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: $(terraformDirectory)
              backendServiceArm: $(azureServiceConnection)
              backendAzureRmResourceGroupName: 'JITHUSTORAGE-rg'
              backendAzureRmStorageAccountName: 'jithustatestorage'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          # Step 2: Terraform Validate
          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: $(terraformDirectory)

          # Step 3: Terraform Plan
          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: $(terraformDirectory)
              environmentServiceNameAzureRM: $(azureServiceConnection)

          # Step 4: Terraform Apply
          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: $(terraformDirectory)
              environmentServiceNameAzureRM: $(azureServiceConnection)
              allowTelemetryCollection: true
              runAzLogin: true
              args: '-auto-approve'
