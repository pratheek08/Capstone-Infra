trigger: none

pool:
  name: Default

variables:
  terraformDirectory: '.'
  azureServiceConnection: 'ARM'

stages:
  - stage: Terraform
    jobs:
      - job: TerraformJob
        displayName: 'Terraform Infrastructure Deployment'
        steps:

          # ✅ Step 0: Install Terraform manually (required for self-hosted agents)
          - script: |
              echo "Installing Terraform..."
              curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
              unzip terraform.zip
              sudo mv terraform /usr/local/bin/
              terraform version
            displayName: 'Install Terraform'

          # ✅ Step 1: Terraform Init
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform init -upgrade

          # ✅ Step 2: Terraform Validate
          - task: AzureCLI@2
            displayName: 'Terraform Validate'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform validate

          # ✅ Step 3: Terraform Plan (with taint)
          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform taint null_resource.install_ingress_aks2
                terraform plan -lock=false -out=tfplan

          # ✅ Step 4: Terraform Apply
          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            continueOnError: true
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(terraformDirectory)
              inlineScript: |
                terraform apply -auto-approve -lock=false tfplan
